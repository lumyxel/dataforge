// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'widget_skeleton_test.model.dart';

mixin _WidgetSkeletonModel {
  abstract final String name;
  abstract final String value;

  _WidgetSkeletonModelCopyWith get copyWith =>
      _WidgetSkeletonModelCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! WidgetSkeletonModel) return false;

    if (name != other.name) {
      return false;
    }
    if (value != other.value) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      value,
    ]);
  }

  @override
  String toString() {
    return 'WidgetSkeletonModel(name: $name, value: $value)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['value'] = value;
    return map;
  }

  static WidgetSkeletonModel fromJson(Map<String, dynamic> map) {
    return WidgetSkeletonModel(
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      value: SafeCasteUtil.safeCast<String>(map['value']) ?? "",
    );
  }
}

/// Helper class for chained copyWith operations
class _WidgetSkeletonModelCopyWith {
  final _WidgetSkeletonModel _instance;
  const _WidgetSkeletonModelCopyWith._(this._instance);

  /// Update name field
  WidgetSkeletonModel name(String? value) {
    return WidgetSkeletonModel(
      name: value ?? _instance.name,
      value: _instance.value,
    );
  }

  /// Update value field
  WidgetSkeletonModel value(String? value) {
    return WidgetSkeletonModel(
      name: _instance.name,
      value: value ?? _instance.value,
    );
  }

  /// Traditional copyWith method
  WidgetSkeletonModel call({
    String? name,
    String? value,
  }) {
    return WidgetSkeletonModel(
      name: name ?? _instance.name,
      value: value ?? _instance.value,
    );
  }
}
