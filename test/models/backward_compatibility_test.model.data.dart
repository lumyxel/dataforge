// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'backward_compatibility_test.model.dart';

mixin _UserDataforge {
  abstract final String name;
  abstract final int age;
  abstract final String? email;

  _UserDataforgeCopyWith get copyWith => _UserDataforgeCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! UserDataforge) return false;

    if (name != other.name) {
      return false;
    }
    if (age != other.age) {
      return false;
    }
    if (email != other.email) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      age,
      email,
    ]);
  }

  @override
  String toString() {
    return 'UserDataforge(name: $name, age: $age, email: $email)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['age'] = age;
    if (email != null) {
      map['email'] = email;
    }
    return map;
  }

  static UserDataforge fromJson(Map<String, dynamic> map) {
    return UserDataforge(
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      age: SafeCasteUtil.safeCast<int>(map['age']) ?? 0,
      email: SafeCasteUtil.safeCast<String>(map['email']),
    );
  }
}

mixin _UserDataClass {
  abstract final String name;
  abstract final int age;
  abstract final String? email;

  _UserDataClassCopyWith get copyWith => _UserDataClassCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! UserDataClass) return false;

    if (name != other.name) {
      return false;
    }
    if (age != other.age) {
      return false;
    }
    if (email != other.email) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      age,
      email,
    ]);
  }

  @override
  String toString() {
    return 'UserDataClass(name: $name, age: $age, email: $email)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['age'] = age;
    if (email != null) {
      map['email'] = email;
    }
    return map;
  }

  static UserDataClass fromJson(Map<String, dynamic> map) {
    return UserDataClass(
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      age: SafeCasteUtil.safeCast<int>(map['age']) ?? 0,
      email: SafeCasteUtil.safeCast<String>(map['email']),
    );
  }
}

mixin _UserDataClassConstant {
  abstract final String name;
  abstract final int age;

  _UserDataClassConstantCopyWith get copyWith =>
      _UserDataClassConstantCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! UserDataClassConstant) return false;

    if (name != other.name) {
      return false;
    }
    if (age != other.age) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      age,
    ]);
  }

  @override
  String toString() {
    return 'UserDataClassConstant(name: $name, age: $age)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['age'] = age;
    return map;
  }

  static UserDataClassConstant fromJson(Map<String, dynamic> map) {
    return UserDataClassConstant(
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      age: SafeCasteUtil.safeCast<int>(map['age']) ?? 0,
    );
  }
}

mixin _UserDataforgeConstant {
  abstract final String name;
  abstract final int age;

  _UserDataforgeConstantCopyWith get copyWith =>
      _UserDataforgeConstantCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! UserDataforgeConstant) return false;

    if (name != other.name) {
      return false;
    }
    if (age != other.age) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      age,
    ]);
  }

  @override
  String toString() {
    return 'UserDataforgeConstant(name: $name, age: $age)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['age'] = age;
    return map;
  }

  static UserDataforgeConstant fromJson(Map<String, dynamic> map) {
    return UserDataforgeConstant(
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      age: SafeCasteUtil.safeCast<int>(map['age']) ?? 0,
    );
  }
}

/// Helper class for chained copyWith operations
class _UserDataforgeCopyWith {
  final _UserDataforge _instance;
  const _UserDataforgeCopyWith._(this._instance);

  /// Update name field
  UserDataforge name(String? value) {
    return UserDataforge(
      name: value ?? _instance.name,
      age: _instance.age,
      email: _instance.email,
    );
  }

  /// Update age field
  UserDataforge age(int? value) {
    return UserDataforge(
      name: _instance.name,
      age: value ?? _instance.age,
      email: _instance.email,
    );
  }

  /// Update email field
  UserDataforge email(String? value) {
    return UserDataforge(
      name: _instance.name,
      age: _instance.age,
      email: value,
    );
  }

  /// Traditional copyWith method
  UserDataforge call({
    String? name,
    int? age,
    String? email,
  }) {
    return UserDataforge(
      name: name ?? _instance.name,
      age: age ?? _instance.age,
      email: email ?? _instance.email,
    );
  }
}

/// Helper class for chained copyWith operations
class _UserDataClassCopyWith {
  final _UserDataClass _instance;
  const _UserDataClassCopyWith._(this._instance);

  /// Update name field
  UserDataClass name(String? value) {
    return UserDataClass(
      name: value ?? _instance.name,
      age: _instance.age,
      email: _instance.email,
    );
  }

  /// Update age field
  UserDataClass age(int? value) {
    return UserDataClass(
      name: _instance.name,
      age: value ?? _instance.age,
      email: _instance.email,
    );
  }

  /// Update email field
  UserDataClass email(String? value) {
    return UserDataClass(
      name: _instance.name,
      age: _instance.age,
      email: value,
    );
  }

  /// Traditional copyWith method
  UserDataClass call({
    String? name,
    int? age,
    String? email,
  }) {
    return UserDataClass(
      name: name ?? _instance.name,
      age: age ?? _instance.age,
      email: email ?? _instance.email,
    );
  }
}

/// Helper class for chained copyWith operations
class _UserDataClassConstantCopyWith {
  final _UserDataClassConstant _instance;
  const _UserDataClassConstantCopyWith._(this._instance);

  /// Update name field
  UserDataClassConstant name(String? value) {
    return UserDataClassConstant(
      name: value ?? _instance.name,
      age: _instance.age,
    );
  }

  /// Update age field
  UserDataClassConstant age(int? value) {
    return UserDataClassConstant(
      name: _instance.name,
      age: value ?? _instance.age,
    );
  }

  /// Traditional copyWith method
  UserDataClassConstant call({
    String? name,
    int? age,
  }) {
    return UserDataClassConstant(
      name: name ?? _instance.name,
      age: age ?? _instance.age,
    );
  }
}

/// Helper class for chained copyWith operations
class _UserDataforgeConstantCopyWith {
  final _UserDataforgeConstant _instance;
  const _UserDataforgeConstantCopyWith._(this._instance);

  /// Update name field
  UserDataforgeConstant name(String? value) {
    return UserDataforgeConstant(
      name: value ?? _instance.name,
      age: _instance.age,
    );
  }

  /// Update age field
  UserDataforgeConstant age(int? value) {
    return UserDataforgeConstant(
      name: _instance.name,
      age: value ?? _instance.age,
    );
  }

  /// Traditional copyWith method
  UserDataforgeConstant call({
    String? name,
    int? age,
  }) {
    return UserDataforgeConstant(
      name: name ?? _instance.name,
      age: age ?? _instance.age,
    );
  }
}
