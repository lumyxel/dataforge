// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'list_custom_type.model.dart';

mixin _ImageListModel {
  abstract final String id;
  abstract final List<ImageBean> watermarkImages;

  _ImageListModelCopyWith get copyWith => _ImageListModelCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! ImageListModel) return false;

    if (id != other.id) {
      return false;
    }
    if (!DeepCollectionEquality()
        .equals(watermarkImages, other.watermarkImages)) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      id,
      DeepCollectionEquality().hash(watermarkImages),
    ]);
  }

  @override
  String toString() {
    return 'ImageListModel(id: $id, watermarkImages: $watermarkImages)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['id'] = id;
    map['watermarkImages'] = watermarkImages;
    return map;
  }

  static ImageListModel fromJson(Map<String, dynamic> map) {
    final watermarkImagesReadValue =
        ImageListModel._readValue(map, 'watermarkImages');
    return ImageListModel(
      id: SafeCasteUtil.safeCast<String>(map['id']) ?? "",
      watermarkImages: ((watermarkImagesReadValue as List?) ?? [])
          .map((e) => ImageBean.fromJson(e as Map<String, dynamic>))
          .toList(),
    );
  }
}

mixin _ImageBean {
  abstract final String url;
  abstract final int width;
  abstract final int height;

  _ImageBeanCopyWith get copyWith => _ImageBeanCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! ImageBean) return false;

    if (url != other.url) {
      return false;
    }
    if (width != other.width) {
      return false;
    }
    if (height != other.height) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      url,
      width,
      height,
    ]);
  }

  @override
  String toString() {
    return 'ImageBean(url: $url, width: $width, height: $height)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['url'] = url;
    map['width'] = width;
    map['height'] = height;
    return map;
  }

  static ImageBean fromJson(Map<String, dynamic> map) {
    return ImageBean(
      url: SafeCasteUtil.safeCast<String>(map['url']) ?? "",
      width: SafeCasteUtil.safeCast<int>(map['width']) ?? 0,
      height: SafeCasteUtil.safeCast<int>(map['height']) ?? 0,
    );
  }
}

/// Helper class for chained copyWith operations
class _ImageListModelCopyWith {
  final _ImageListModel _instance;
  const _ImageListModelCopyWith._(this._instance);

  /// Update id field
  ImageListModel id(String? value) {
    return ImageListModel(
      id: value ?? _instance.id,
      watermarkImages: _instance.watermarkImages,
    );
  }

  /// Update watermarkImages field
  ImageListModel watermarkImages(List<ImageBean>? value) {
    return ImageListModel(
      id: _instance.id,
      watermarkImages: value ?? _instance.watermarkImages,
    );
  }

  /// Traditional copyWith method
  ImageListModel call({
    String? id,
    List<ImageBean>? watermarkImages,
  }) {
    return ImageListModel(
      id: id ?? _instance.id,
      watermarkImages: watermarkImages ?? _instance.watermarkImages,
    );
  }
}

/// Helper class for chained copyWith operations
class _ImageBeanCopyWith {
  final _ImageBean _instance;
  const _ImageBeanCopyWith._(this._instance);

  /// Update url field
  ImageBean url(String? value) {
    return ImageBean(
      url: value ?? _instance.url,
      width: _instance.width,
      height: _instance.height,
    );
  }

  /// Update width field
  ImageBean width(int? value) {
    return ImageBean(
      url: _instance.url,
      width: value ?? _instance.width,
      height: _instance.height,
    );
  }

  /// Update height field
  ImageBean height(int? value) {
    return ImageBean(
      url: _instance.url,
      width: _instance.width,
      height: value ?? _instance.height,
    );
  }

  /// Traditional copyWith method
  ImageBean call({
    String? url,
    int? width,
    int? height,
  }) {
    return ImageBean(
      url: url ?? _instance.url,
      width: width ?? _instance.width,
      height: height ?? _instance.height,
    );
  }
}
