// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'custom_read_value.model.dart';

mixin _CustomReadValue {
  abstract final String id;
  abstract final String name;
  abstract final String title;
  abstract final int count;
  abstract final bool enabled;
  abstract final DateTime? createdDate;
  abstract final Map<String, dynamic>? config;
  abstract final List<String>? tags;

  _CustomReadValueCopyWith get copyWith => _CustomReadValueCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! CustomReadValue) return false;

    if (id != other.id) {
      return false;
    }
    if (name != other.name) {
      return false;
    }
    if (title != other.title) {
      return false;
    }
    if (count != other.count) {
      return false;
    }
    if (enabled != other.enabled) {
      return false;
    }
    if (createdDate != other.createdDate) {
      return false;
    }
    if (!DeepCollectionEquality().equals(config, other.config)) {
      return false;
    }
    if (!DeepCollectionEquality().equals(tags, other.tags)) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      id,
      name,
      title,
      count,
      enabled,
      createdDate,
      DeepCollectionEquality().hash(config),
      DeepCollectionEquality().hash(tags),
    ]);
  }

  @override
  String toString() {
    return 'CustomReadValue(id: $id, name: $name, title: $title, count: $count, enabled: $enabled, createdDate: $createdDate, config: $config, tags: $tags)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['id'] = id;
    map['name'] = name;
    map['title'] = title;
    map['count'] = count;
    map['enabled'] = enabled;
    if (createdDate != null) {
      map['createdDate'] = createdDate != null
          ? const DefaultDateTimeConverter().toJson(createdDate!)
          : null;
    }
    if (config != null) {
      map['config'] = config;
    }
    if (tags != null) {
      map['tags'] = tags;
    }
    return map;
  }

  static CustomReadValue fromJson(Map<String, dynamic> map) {
    final titleReadValue = CustomReadValue._readValue(map, 'title');
    final countReadValue = CustomReadValue._readValue(map, 'count');
    final enabledReadValue = CustomReadValue._readValue(map, 'enabled');
    final createdDateReadValue = CustomReadValue._readValue(map, 'createdDate');
    final configReadValue = CustomReadValue._readValue(map, 'config');
    final tagsReadValue = CustomReadValue._readValue(map, 'tags');
    return CustomReadValue(
      id: SafeCasteUtil.safeCast<String>(map['id']) ?? "",
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      title: SafeCasteUtil.safeCast<String>(titleReadValue) ?? '',
      count: SafeCasteUtil.safeCast<int>(countReadValue) ?? 0,
      enabled: SafeCasteUtil.safeCast<bool>(enabledReadValue) ?? false,
      createdDate: createdDateReadValue != null
          ? DateTime.tryParse(createdDateReadValue.toString())
          : null,
      config: configReadValue != null
          ? (configReadValue as Map?)?.cast<String, dynamic>()
          : null,
      tags: tagsReadValue != null
          ? (tagsReadValue as List?)?.cast<String>()
          : null,
    );
  }
}

/// Helper class for chained copyWith operations
class _CustomReadValueCopyWith {
  final _CustomReadValue _instance;
  const _CustomReadValueCopyWith._(this._instance);

  /// Update id field
  CustomReadValue id(String? value) {
    return CustomReadValue(
      id: value ?? _instance.id,
      name: _instance.name,
      title: _instance.title,
      count: _instance.count,
      enabled: _instance.enabled,
      createdDate: _instance.createdDate,
      config: _instance.config,
      tags: _instance.tags,
    );
  }

  /// Update name field
  CustomReadValue name(String? value) {
    return CustomReadValue(
      id: _instance.id,
      name: value ?? _instance.name,
      title: _instance.title,
      count: _instance.count,
      enabled: _instance.enabled,
      createdDate: _instance.createdDate,
      config: _instance.config,
      tags: _instance.tags,
    );
  }

  /// Update title field
  CustomReadValue title(String? value) {
    return CustomReadValue(
      id: _instance.id,
      name: _instance.name,
      title: value ?? _instance.title,
      count: _instance.count,
      enabled: _instance.enabled,
      createdDate: _instance.createdDate,
      config: _instance.config,
      tags: _instance.tags,
    );
  }

  /// Update count field
  CustomReadValue count(int? value) {
    return CustomReadValue(
      id: _instance.id,
      name: _instance.name,
      title: _instance.title,
      count: value ?? _instance.count,
      enabled: _instance.enabled,
      createdDate: _instance.createdDate,
      config: _instance.config,
      tags: _instance.tags,
    );
  }

  /// Update enabled field
  CustomReadValue enabled(bool? value) {
    return CustomReadValue(
      id: _instance.id,
      name: _instance.name,
      title: _instance.title,
      count: _instance.count,
      enabled: value ?? _instance.enabled,
      createdDate: _instance.createdDate,
      config: _instance.config,
      tags: _instance.tags,
    );
  }

  /// Update createdDate field
  CustomReadValue createdDate(DateTime? value) {
    return CustomReadValue(
      id: _instance.id,
      name: _instance.name,
      title: _instance.title,
      count: _instance.count,
      enabled: _instance.enabled,
      createdDate: value,
      config: _instance.config,
      tags: _instance.tags,
    );
  }

  /// Update config field
  CustomReadValue config(Map<String, dynamic>? value) {
    return CustomReadValue(
      id: _instance.id,
      name: _instance.name,
      title: _instance.title,
      count: _instance.count,
      enabled: _instance.enabled,
      createdDate: _instance.createdDate,
      config: value,
      tags: _instance.tags,
    );
  }

  /// Update tags field
  CustomReadValue tags(List<String>? value) {
    return CustomReadValue(
      id: _instance.id,
      name: _instance.name,
      title: _instance.title,
      count: _instance.count,
      enabled: _instance.enabled,
      createdDate: _instance.createdDate,
      config: _instance.config,
      tags: value,
    );
  }

  /// Traditional copyWith method
  CustomReadValue call({
    String? id,
    String? name,
    String? title,
    int? count,
    bool? enabled,
    DateTime? createdDate,
    Map<String, dynamic>? config,
    List<String>? tags,
  }) {
    return CustomReadValue(
      id: id ?? _instance.id,
      name: name ?? _instance.name,
      title: title ?? _instance.title,
      count: count ?? _instance.count,
      enabled: enabled ?? _instance.enabled,
      createdDate: createdDate ?? _instance.createdDate,
      config: config ?? _instance.config,
      tags: tags ?? _instance.tags,
    );
  }
}
