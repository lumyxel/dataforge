// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'alternate_names_priority_test.model.dart';

mixin _AlternateNamesPriorityTest {
  abstract final String? owner;
  abstract final String? title;
  abstract final String? description;

  _AlternateNamesPriorityTestCopyWith get copyWith =>
      _AlternateNamesPriorityTestCopyWith._(this as AlternateNamesPriorityTest);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! AlternateNamesPriorityTest) return false;

    if (owner != other.owner) {
      return false;
    }
    if (title != other.title) {
      return false;
    }
    if (description != other.description) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      owner,
      title,
      description,
    ]);
  }

  @override
  String toString() {
    return 'AlternateNamesPriorityTest(owner: $owner, title: $title, description: $description)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    if (owner != null) {
      map['owner'] = owner;
    }
    if (title != null) {
      map['title'] = title;
    }
    if (description != null) {
      map['description'] = description;
    }
    return map;
  }

  static AlternateNamesPriorityTest fromJson(Map<String, dynamic> map) {
    return AlternateNamesPriorityTest(
      owner: SafeCasteUtil.safeCast<String>(
          (map['owner'] ?? map['ownerCopyright'] ?? map['copyright_owner'])),
      title: SafeCasteUtil.safeCast<String>(
          (map['title'] ?? map['name'] ?? map['displayName'])),
      description: SafeCasteUtil.safeCast<String>(map['description']),
    );
  }
}

/// Helper class for chained copyWith operations
class _AlternateNamesPriorityTestCopyWith {
  final AlternateNamesPriorityTest _instance;
  const _AlternateNamesPriorityTestCopyWith._(this._instance);

  /// Update owner field
  _AlternateNamesPriorityTestCopyWith owner(String? value) {
    return _AlternateNamesPriorityTestCopyWith._(AlternateNamesPriorityTest(
      owner: value,
      title: _instance.title,
      description: _instance.description,
    ));
  }

  /// Update title field
  _AlternateNamesPriorityTestCopyWith title(String? value) {
    return _AlternateNamesPriorityTestCopyWith._(AlternateNamesPriorityTest(
      owner: _instance.owner,
      title: value,
      description: _instance.description,
    ));
  }

  /// Update description field
  _AlternateNamesPriorityTestCopyWith description(String? value) {
    return _AlternateNamesPriorityTestCopyWith._(AlternateNamesPriorityTest(
      owner: _instance.owner,
      title: _instance.title,
      description: value,
    ));
  }

  /// Build the final instance
  AlternateNamesPriorityTest build() {
    return _instance;
  }

  /// Traditional copyWith method
  AlternateNamesPriorityTest call({
    String? owner,
    String? title,
    String? description,
  }) {
    return AlternateNamesPriorityTest(
      owner: owner ?? _instance.owner,
      title: title ?? _instance.title,
      description: description ?? _instance.description,
    );
  }
}
