// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'override_test.model.dart';

mixin _OverrideTestModel {
  abstract final String name;
  abstract final int value;
  abstract final bool isActive;

  _OverrideTestModelCopyWith get copyWith => _OverrideTestModelCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! OverrideTestModel) return false;

    if (name != other.name) {
      return false;
    }
    if (value != other.value) {
      return false;
    }
    if (isActive != other.isActive) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      value,
      isActive,
    ]);
  }

  @override
  String toString() {
    return 'OverrideTestModel(name: $name, value: $value, isActive: $isActive)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['value'] = value;
    map['isActive'] = isActive;
    return map;
  }

  static OverrideTestModel fromJson(Map<String, dynamic> map) {
    return OverrideTestModel(
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      value: SafeCasteUtil.safeCast<int>(map['value']) ?? 0,
      isActive: SafeCasteUtil.safeCast<bool>(map['isActive']) ?? false,
    );
  }
}

/// Helper class for chained copyWith operations
class _OverrideTestModelCopyWith {
  final _OverrideTestModel _instance;
  const _OverrideTestModelCopyWith._(this._instance);

  /// Update name field
  OverrideTestModel name(String? value) {
    return OverrideTestModel(
      name: value ?? _instance.name,
      value: _instance.value,
      isActive: _instance.isActive,
    );
  }

  /// Update value field
  OverrideTestModel value(int? value) {
    return OverrideTestModel(
      name: _instance.name,
      value: value ?? _instance.value,
      isActive: _instance.isActive,
    );
  }

  /// Update isActive field
  OverrideTestModel isActive(bool? value) {
    return OverrideTestModel(
      name: _instance.name,
      value: _instance.value,
      isActive: value ?? _instance.isActive,
    );
  }

  /// Traditional copyWith method
  OverrideTestModel call({
    String? name,
    int? value,
    bool? isActive,
  }) {
    return OverrideTestModel(
      name: name ?? _instance.name,
      value: value ?? _instance.value,
      isActive: isActive ?? _instance.isActive,
    );
  }
}
