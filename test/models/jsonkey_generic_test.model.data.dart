// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'jsonkey_generic_test.model.dart';

mixin _ApiResponse<T> {
  abstract final bool success;
  abstract final String message;
  abstract final T? data;

  _ApiResponseCopyWith<T> get copyWith =>
      _ApiResponseCopyWith<T>._(this as ApiResponse<T>);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! ApiResponse) return false;

    if (success != other.success) {
      return false;
    }
    if (message != other.message) {
      return false;
    }
    if (data != other.data) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      success,
      message,
      data,
    ]);
  }

  @override
  String toString() {
    return 'ApiResponse(success: $success, message: $message, data: $data)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['success'] = success;
    map['message'] = message;
    if (data != null) {
      map['data'] = data != null ? ApiResponse._dataToJson(data as T) : null;
    }
    return map;
  }

  static ApiResponse<T> fromJson<T>(Map<String, dynamic> map) {
    return ApiResponse<T>(
      success: SafeCasteUtil.safeCast<bool>(map['success']) ?? false,
      message: SafeCasteUtil.safeCast<String>(map['message']) ?? "",
      data: map['data'] != null ? ApiResponse._dataFromJson(map['data']) : null,
    );
  }
}

mixin _User {
  abstract final int id;
  abstract final String name;
  abstract final String email;
  abstract final int? age;

  _UserCopyWith get copyWith => _UserCopyWith._(this as User);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! User) return false;

    if (id != other.id) {
      return false;
    }
    if (name != other.name) {
      return false;
    }
    if (email != other.email) {
      return false;
    }
    if (age != other.age) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      id,
      name,
      email,
      age,
    ]);
  }

  @override
  String toString() {
    return 'User(id: $id, name: $name, email: $email, age: $age)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['id'] = id;
    map['name'] = name;
    map['email'] = email;
    if (age != null) {
      map['age'] = age;
    }
    return map;
  }

  static User fromJson(Map<String, dynamic> map) {
    return User(
      id: SafeCasteUtil.safeCast<int>(map['id']) ?? 0,
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      email: SafeCasteUtil.safeCast<String>(map['email']) ?? "",
      age: SafeCasteUtil.safeCast<int>(map['age']),
    );
  }
}

mixin _ListResponse<T> {
  abstract final int total;
  abstract final List<T>? items;

  _ListResponseCopyWith<T> get copyWith =>
      _ListResponseCopyWith<T>._(this as ListResponse<T>);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! ListResponse) return false;

    if (total != other.total) {
      return false;
    }
    if (!DeepCollectionEquality().equals(items, other.items)) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      total,
      DeepCollectionEquality().hash(items),
    ]);
  }

  @override
  String toString() {
    return 'ListResponse(total: $total, items: $items)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['total'] = total;
    if (items != null) {
      map['items'] = items != null ? ListResponse._itemsToJson(items!) : null;
    }
    return map;
  }

  static ListResponse<T> fromJson<T>(Map<String, dynamic> map) {
    return ListResponse<T>(
      total: SafeCasteUtil.safeCast<int>(map['total']) ?? 0,
      items: map['items'] != null
          ? ListResponse._itemsFromJson(map['items'])
          : null,
    );
  }
}

/// Helper class for chained copyWith operations
class _ApiResponseCopyWith<T> {
  final ApiResponse<T> _instance;
  const _ApiResponseCopyWith._(this._instance);

  /// Update success field
  _ApiResponseCopyWith<T> success(bool value) {
    return _ApiResponseCopyWith<T>._(ApiResponse<T>(
      success: value,
      message: _instance.message,
      data: _instance.data,
    ));
  }

  /// Update message field
  _ApiResponseCopyWith<T> message(String value) {
    return _ApiResponseCopyWith<T>._(ApiResponse<T>(
      success: _instance.success,
      message: value,
      data: _instance.data,
    ));
  }

  /// Update data field
  _ApiResponseCopyWith<T> data(T? value) {
    return _ApiResponseCopyWith<T>._(ApiResponse<T>(
      success: _instance.success,
      message: _instance.message,
      data: value,
    ));
  }

  /// Build the final instance
  ApiResponse<T> build() {
    return _instance;
  }

  /// Nested copyWith for data field
  _ApiResponseNestedCopyWithData<T> get dataBuilder {
    return _ApiResponseNestedCopyWithData<T>._(_instance);
  }

  /// Traditional copyWith method
  ApiResponse<T> call({
    bool? success,
    String? message,
    T? data,
  }) {
    return ApiResponse<T>(
      success: success ?? _instance.success,
      message: message ?? _instance.message,
      data: data ?? _instance.data,
    );
  }
}

/// Nested copyWith helper class for data field
class _ApiResponseNestedCopyWithData<T> {
  final ApiResponse<T> _instance;
  const _ApiResponseNestedCopyWithData._(this._instance);

  /// Update data field using a copyWith function
  ApiResponse<T> call(T Function(T) updater) {
    final currentValue = _instance.data;
    if (currentValue == null) return _instance;
    final updatedValue = updater(currentValue);
    return ApiResponse<T>(
      success: _instance.success,
      message: _instance.message,
      data: updatedValue,
    );
  }
}

/// Helper class for chained copyWith operations
class _UserCopyWith {
  final User _instance;
  const _UserCopyWith._(this._instance);

  /// Update id field
  _UserCopyWith id(int value) {
    return _UserCopyWith._(User(
      id: value,
      name: _instance.name,
      email: _instance.email,
      age: _instance.age,
    ));
  }

  /// Update name field
  _UserCopyWith name(String value) {
    return _UserCopyWith._(User(
      id: _instance.id,
      name: value,
      email: _instance.email,
      age: _instance.age,
    ));
  }

  /// Update email field
  _UserCopyWith email(String value) {
    return _UserCopyWith._(User(
      id: _instance.id,
      name: _instance.name,
      email: value,
      age: _instance.age,
    ));
  }

  /// Update age field
  _UserCopyWith age(int? value) {
    return _UserCopyWith._(User(
      id: _instance.id,
      name: _instance.name,
      email: _instance.email,
      age: value,
    ));
  }

  /// Build the final instance
  User build() {
    return _instance;
  }

  /// Traditional copyWith method
  User call({
    int? id,
    String? name,
    String? email,
    int? age,
  }) {
    return User(
      id: id ?? _instance.id,
      name: name ?? _instance.name,
      email: email ?? _instance.email,
      age: age ?? _instance.age,
    );
  }
}

/// Helper class for chained copyWith operations
class _ListResponseCopyWith<T> {
  final ListResponse<T> _instance;
  const _ListResponseCopyWith._(this._instance);

  /// Update total field
  _ListResponseCopyWith<T> total(int value) {
    return _ListResponseCopyWith<T>._(ListResponse<T>(
      total: value,
      items: _instance.items,
    ));
  }

  /// Update items field
  _ListResponseCopyWith<T> items(List<T>? value) {
    return _ListResponseCopyWith<T>._(ListResponse<T>(
      total: _instance.total,
      items: value,
    ));
  }

  /// Build the final instance
  ListResponse<T> build() {
    return _instance;
  }

  /// Traditional copyWith method
  ListResponse<T> call({
    int? total,
    List<T>? items,
  }) {
    return ListResponse<T>(
      total: total ?? _instance.total,
      items: items ?? _instance.items,
    );
  }
}
