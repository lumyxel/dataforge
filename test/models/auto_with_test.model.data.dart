// Generated by data class generator
// DO NOT MODIFY BY HAND

part of 'auto_with_test.model.dart';

mixin _TestUser {
  abstract final String name;
  abstract final int age;

  _TestUserCopyWith get copyWith => _TestUserCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! TestUser) return false;

    if (name != other.name) {
      return false;
    }
    if (age != other.age) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      name,
      age,
    ]);
  }

  @override
  String toString() {
    return 'TestUser(name: $name, age: $age)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['age'] = age;
    return map;
  }

  static TestUser fromJson(Map<String, dynamic> map) {
    return TestUser(
      name: SafeCasteUtil.safeCast<String>(map['name']) ?? "",
      age: SafeCasteUtil.safeCast<int>(map['age']) ?? 0,
    );
  }
}

mixin _TestAdmin {
  abstract final String username;
  abstract final String role;

  _TestAdminCopyWith get copyWith => _TestAdminCopyWith._(this);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! TestAdmin) return false;

    if (username != other.username) {
      return false;
    }
    if (role != other.role) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      username,
      role,
    ]);
  }

  @override
  String toString() {
    return 'TestAdmin(username: $username, role: $role)';
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['username'] = username;
    map['role'] = role;
    return map;
  }

  static TestAdmin fromJson(Map<String, dynamic> map) {
    return TestAdmin(
      username: SafeCasteUtil.safeCast<String>(map['username']) ?? "",
      role: SafeCasteUtil.safeCast<String>(map['role']) ?? "",
    );
  }
}

/// Helper class for chained copyWith operations
class _TestUserCopyWith {
  final _TestUser _instance;
  const _TestUserCopyWith._(this._instance);

  /// Update name field
  TestUser name(String? value) {
    return TestUser(
      name: value ?? _instance.name,
      age: _instance.age,
    );
  }

  /// Update age field
  TestUser age(int? value) {
    return TestUser(
      name: _instance.name,
      age: value ?? _instance.age,
    );
  }

  /// Traditional copyWith method
  TestUser call({
    String? name,
    int? age,
  }) {
    return TestUser(
      name: name ?? _instance.name,
      age: age ?? _instance.age,
    );
  }
}

/// Helper class for chained copyWith operations
class _TestAdminCopyWith {
  final _TestAdmin _instance;
  const _TestAdminCopyWith._(this._instance);

  /// Update username field
  TestAdmin username(String? value) {
    return TestAdmin(
      username: value ?? _instance.username,
      role: _instance.role,
    );
  }

  /// Update role field
  TestAdmin role(String? value) {
    return TestAdmin(
      username: _instance.username,
      role: value ?? _instance.role,
    );
  }

  /// Traditional copyWith method
  TestAdmin call({
    String? username,
    String? role,
  }) {
    return TestAdmin(
      username: username ?? _instance.username,
      role: role ?? _instance.role,
    );
  }
}
